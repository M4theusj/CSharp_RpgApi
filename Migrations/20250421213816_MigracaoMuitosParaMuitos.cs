using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace RpgApi.Migrations
{
    /// <inheritdoc />
    public partial class MigracaoMuitosParaMuitos : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "TB_USUARIOS",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 26, 138, 62, 39, 25, 224, 118, 234, 241, 221, 245, 95, 16, 250, 207, 252, 47, 243, 174, 38, 14, 168, 235, 175, 70, 172, 186, 104, 252, 252, 148, 126, 114, 178, 198, 253, 72, 232, 230, 245, 88, 89, 23, 245, 53, 34, 254, 244, 184, 201, 171, 27, 173, 18, 209, 34, 205, 72, 202, 8, 154, 128, 105, 177 }, new byte[] { 132, 196, 232, 173, 3, 148, 5, 252, 130, 177, 255, 65, 85, 148, 101, 254, 97, 137, 120, 1, 183, 86, 56, 107, 22, 115, 31, 160, 56, 178, 92, 71, 65, 110, 75, 127, 69, 88, 112, 15, 218, 240, 103, 209, 255, 216, 28, 123, 5, 227, 138, 134, 144, 97, 69, 180, 229, 41, 89, 24, 109, 35, 103, 54, 106, 94, 2, 142, 163, 243, 76, 50, 122, 64, 42, 251, 232, 218, 104, 198, 87, 131, 247, 76, 225, 192, 148, 189, 0, 112, 92, 251, 110, 146, 251, 128, 122, 57, 132, 202, 245, 122, 144, 209, 45, 151, 152, 43, 36, 176, 54, 27, 4, 127, 44, 35, 94, 101, 81, 111, 213, 201, 51, 184, 150, 34, 80, 195 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "TB_USUARIOS",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 160, 90, 127, 95, 201, 12, 69, 255, 195, 145, 116, 172, 122, 95, 136, 234, 212, 81, 175, 92, 103, 141, 57, 47, 242, 138, 168, 189, 89, 251, 100, 244, 236, 208, 171, 145, 213, 227, 215, 162, 142, 95, 119, 50, 212, 79, 121, 175, 126, 171, 174, 57, 155, 191, 199, 119, 176, 202, 195, 68, 171, 177, 189, 126 }, new byte[] { 120, 210, 213, 169, 202, 176, 144, 104, 227, 10, 47, 19, 219, 213, 54, 130, 206, 5, 49, 122, 131, 168, 233, 52, 50, 94, 108, 136, 209, 8, 130, 11, 107, 59, 183, 21, 62, 100, 245, 226, 30, 37, 63, 240, 126, 4, 248, 116, 54, 98, 79, 134, 236, 207, 62, 85, 170, 126, 134, 224, 161, 7, 12, 168, 250, 63, 111, 54, 107, 172, 232, 69, 237, 13, 6, 140, 245, 207, 35, 225, 253, 84, 165, 235, 8, 76, 76, 208, 106, 130, 218, 8, 198, 95, 248, 208, 115, 154, 101, 157, 138, 173, 166, 169, 180, 22, 210, 107, 11, 19, 182, 213, 58, 79, 159, 5, 183, 24, 235, 103, 8, 199, 180, 3, 236, 161, 62, 158 } });
        }
    }
}
