using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace RpgApi.Migrations
{
    /// <inheritdoc />
    public partial class MigracaoUmParaUm : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "TB_USUARIOS",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 108, 153, 176, 32, 193, 19, 5, 220, 242, 99, 107, 179, 38, 97, 197, 212, 227, 123, 118, 145, 39, 121, 107, 69, 160, 10, 192, 60, 153, 98, 157, 93, 41, 75, 248, 123, 64, 236, 233, 150, 73, 62, 67, 209, 109, 128, 41, 193, 8, 243, 133, 17, 246, 149, 120, 98, 132, 40, 101, 87, 108, 192, 246, 105 }, new byte[] { 119, 198, 240, 164, 255, 249, 255, 48, 115, 201, 9, 100, 208, 140, 241, 156, 123, 39, 63, 31, 158, 220, 135, 107, 218, 38, 89, 233, 120, 38, 233, 79, 193, 17, 129, 235, 182, 107, 101, 18, 251, 75, 215, 28, 154, 25, 11, 64, 2, 91, 239, 234, 18, 115, 214, 77, 73, 245, 94, 170, 138, 161, 5, 50, 44, 225, 19, 217, 236, 105, 199, 151, 228, 81, 234, 49, 156, 172, 94, 192, 123, 55, 31, 23, 119, 102, 234, 55, 251, 147, 198, 95, 255, 112, 160, 229, 44, 69, 127, 193, 103, 233, 141, 193, 104, 170, 238, 158, 238, 121, 31, 75, 69, 248, 32, 149, 11, 178, 250, 201, 195, 24, 214, 248, 147, 235, 146, 248 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "TB_USUARIOS",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 26, 138, 62, 39, 25, 224, 118, 234, 241, 221, 245, 95, 16, 250, 207, 252, 47, 243, 174, 38, 14, 168, 235, 175, 70, 172, 186, 104, 252, 252, 148, 126, 114, 178, 198, 253, 72, 232, 230, 245, 88, 89, 23, 245, 53, 34, 254, 244, 184, 201, 171, 27, 173, 18, 209, 34, 205, 72, 202, 8, 154, 128, 105, 177 }, new byte[] { 132, 196, 232, 173, 3, 148, 5, 252, 130, 177, 255, 65, 85, 148, 101, 254, 97, 137, 120, 1, 183, 86, 56, 107, 22, 115, 31, 160, 56, 178, 92, 71, 65, 110, 75, 127, 69, 88, 112, 15, 218, 240, 103, 209, 255, 216, 28, 123, 5, 227, 138, 134, 144, 97, 69, 180, 229, 41, 89, 24, 109, 35, 103, 54, 106, 94, 2, 142, 163, 243, 76, 50, 122, 64, 42, 251, 232, 218, 104, 198, 87, 131, 247, 76, 225, 192, 148, 189, 0, 112, 92, 251, 110, 146, 251, 128, 122, 57, 132, 202, 245, 122, 144, 209, 45, 151, 152, 43, 36, 176, 54, 27, 4, 127, 44, 35, 94, 101, 81, 111, 213, 201, 51, 184, 150, 34, 80, 195 } });
        }
    }
}
